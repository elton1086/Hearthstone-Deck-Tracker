<controls:MetroWindow x:Class="Hearthstone_Deck_Tracker.Windows.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:local="clr-namespace:Hearthstone_Deck_Tracker"
                      xmlns:controls1="clr-namespace:Hearthstone_Deck_Tracker.Controls"
                      xmlns:flyoutControls="clr-namespace:Hearthstone_Deck_Tracker.FlyoutControls"
                      xmlns:error="clr-namespace:Hearthstone_Deck_Tracker.Controls.Error"
                      xmlns:deckPicker="clr-namespace:Hearthstone_Deck_Tracker.Controls.DeckPicker"
                      xmlns:windows="clr-namespace:Hearthstone_Deck_Tracker.Windows"
                      xmlns:utility="clr-namespace:Hearthstone_Deck_Tracker.Utility.Updating"
                      xmlns:lex="http://wpflocalizeextension.codeplex.com"
                      xmlns:deckScreenshot="clr-namespace:Hearthstone_Deck_Tracker.FlyoutControls.DeckScreenshot"
                      xmlns:deckExport="clr-namespace:Hearthstone_Deck_Tracker.FlyoutControls.DeckExport"
                      xmlns:mainWindowControls="clr-namespace:Hearthstone_Deck_Tracker.Windows.MainWindowControls"
                      xmlns:deckHistory="clr-namespace:Hearthstone_Deck_Tracker.FlyoutControls.DeckHistory"
                      lex:LocalizeDictionary.DesignCulture="en"
                      lex:ResxLocalizationProvider.DefaultAssembly="HearthstoneDeckTracker"
                      lex:ResxLocalizationProvider.DefaultDictionary="Strings"
                      Title="Hearthstone Deck Tracker" Height="603" Width="720"
                      MinHeight="584" MinWidth="720"
                      Closing="Window_Closing"
                      Icon="{StaticResource AppIcon}"
                      StateChanged="MetroWindow_StateChanged" Loaded="MetroWindow_Loaded"
                      PreviewKeyDown="MainWindow_OnPreviewKeyDown"
                      BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="1" LocationChanged="MetroWindow_LocationChanged" SizeChanged="MetroWindow_SizeChanged">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/Icons.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <controls:MetroWindow.IconTemplate>
        <DataTemplate>
            <Rectangle Margin="2" Opacity="0.7">
                <Rectangle.Fill>
                    <VisualBrush Visual="{StaticResource hdticon}" />
                </Rectangle.Fill>
            </Rectangle>
        </DataTemplate>
    </controls:MetroWindow.IconTemplate>
    <controls:MetroWindow.RightWindowCommands>
        <controls:WindowCommands>
            <Button Click="BtnErrors_OnClick" Visibility="{Binding ErrorIconVisibility, RelativeSource={RelativeSource AncestorType=windows:MainWindow}}">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="16" Height="16">
                        <Rectangle.Fill>
                            <VisualBrush Visual="{StaticResource appbar_warning_circle}" />
                        </Rectangle.Fill>
                    </Rectangle>
                    <TextBlock Margin="4" VerticalAlignment="Center" Text="{Binding ErrorCount, RelativeSource={RelativeSource AncestorType=windows:MainWindow}}" />
                </StackPanel>
            </Button>
            <Button Click="BtnOptions_OnClick">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="16" Height="16">
                        <Rectangle.Fill>
                            <VisualBrush Visual="{StaticResource appbar_settings}" />
                        </Rectangle.Fill>
                    </Rectangle>
                    <TextBlock Margin="4" VerticalAlignment="Center" Text="{lex:LocTextLower MainWindow_TitleBar_Options}" />
                </StackPanel>
            </Button>
            <Button Click="BtnDiscord_OnClick">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="14" Height="16" Margin="0,2,0,0">
                        <Rectangle.Fill>
                            <VisualBrush Visual="{StaticResource appbar_discord}" />
                        </Rectangle.Fill>
                    </Rectangle>
                    <TextBlock Margin="4" VerticalAlignment="Center" Text="discord" />
                </StackPanel>
            </Button>
            <Button Click="BtnHelp_OnClick">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="12" Height="14">
                        <Rectangle.Fill>
                            <VisualBrush Visual="{StaticResource appbar_question}" />
                        </Rectangle.Fill>
                    </Rectangle>
                    <TextBlock Margin="4" VerticalAlignment="Center" Text="{lex:LocTextLower MainWindow_TitleBar_Help}" />
                </StackPanel>
            </Button>
        </controls:WindowCommands>
    </controls:MetroWindow.RightWindowCommands>
    <controls:MetroWindow.Flyouts>
        <controls:FlyoutsControl Margin="{Binding TitleBarMargin, RelativeSource={RelativeSource AncestorType=windows:MainWindow}}">
            <controls:Flyout x:Name="FlyoutWarnings" Position="Bottom" Panel.ZIndex="102" Width="auto" Height="auto">
                <controls:Flyout.HeaderTemplate>
                    <DataTemplate/>
                </controls:Flyout.HeaderTemplate>
                <flyoutControls:Warning x:Name="WarningFlyout" />
            </controls:Flyout>
            <controls:Flyout x:Name="FlyoutOptions" Position="Left" Panel.ZIndex="102" Header="{lex:Loc MainWindow_Flyout_Options_Header}"
                         Width="600">
                <flyoutControls:OptionsMain x:Name="Options"/>
            </controls:Flyout>
            <controls:Flyout x:Name="FlyoutHelp" Position="Left" Panel.ZIndex="102" Header="{lex:Loc MainWindow_Flyout_Help_Header}"
                         Width="{Binding Width, RelativeSource={RelativeSource AncestorType=windows:MainWindow}}">
                <local:Help x:Name="Help" />
            </controls:Flyout>
            <controls:Flyout x:Name="FlyoutDeck" Position="Left" Panel.ZIndex="102" Width="250" Header="{lex:Loc MainWindow_Flyout_OpponentDeck_Header}">
                <flyoutControls:DeckPanel x:Name="DeckFlyout" />
            </controls:Flyout>
            <controls:Flyout x:Name="FlyoutSortFilter" Header="{lex:Loc MainWindow_Flyout_SortFilter_Header}" Position="Right" Width="245" Height="auto" Panel.ZIndex="100">
                <local:SortFilterDecks Width="auto" Height="auto" x:Name="SortFilterDecksFlyout" />
            </controls:Flyout>
            <controls:Flyout x:Name="FlyoutNotes" Header="{lex:Loc MainWindow_Flyout_Notes_Header}" Position="Right" Width="255" Height="auto"
                         Panel.ZIndex="100">
                <local:DeckNotes Width="auto" Height="auto" x:Name="DeckNotesEditor" Margin="3,0,0,0" />
            </controls:Flyout>
            <controls:Flyout x:Name="FlyoutMyDecksSetTags" Header="{lex:Loc MainWindow_Flyout_SetTags_Header}" Position="Right" Width="255"
                         Height="auto" Panel.ZIndex="100">
                <local:SortFilterDecks Width="auto" Height="auto" x:Name="TagControlEdit" />
            </controls:Flyout>
            <controls:Flyout x:Name="FlyoutErrors" Position="Top" Header="{lex:Loc MainWindow_Flyout_Errors_Header}">
                <error:ErrorList DataContext="{Binding Errors, RelativeSource={RelativeSource AncestorType=windows:MainWindow}}" VerticalAlignment="Center" MaxHeight="400"/>
            </controls:Flyout>
            <controls:Flyout x:Name="FlyoutUpdateNotes" Header="{lex:Loc MainWindow_Flyout_UpdateNotes_Header}" CloseButtonVisibility="Collapsed" Position="Left" Panel.ZIndex="1" Width="{Binding Width, RelativeSource={RelativeSource AncestorType=windows:MainWindow}}">
                <flyoutControls:UpdateNotes x:Name="UpdateNotesControl"/>
            </controls:Flyout>
            <controls:Flyout x:Name="FlyoutHsReplayNote" CloseButtonVisibility="Collapsed" Position="Left" Panel.ZIndex="0" Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=windows:MainWindow}}">
                <controls:Flyout.HeaderTemplate>
                    <DataTemplate/>
                </controls:Flyout.HeaderTemplate>
                <flyoutControls:HsReplayInfo x:Name="HsReplayInfoFlyout"/>
            </controls:Flyout>
            <controls:Flyout x:Name="FlyoutDeckImporting" Header="{lex:Loc MainWindow_Flyout_DeckImporting_Header}" Position="Left" Panel.ZIndex="1" Width="{Binding Width, RelativeSource={RelativeSource AncestorType=windows:MainWindow}}">
                <controls1:DeckImportingControl x:Name="DeckImportingFlyout"/>
            </controls:Flyout>
            <controls:Flyout x:Name="FlyoutDeckScreenshot" Header="{lex:Loc MainWindow_Flyout_DeckScreenshot_Header}" Position="Right" Panel.ZIndex="1" Width="300">
                <deckScreenshot:DeckScreenshotView x:Name="DeckScreenshotFlyout"/>
            </controls:Flyout>
            <controls:Flyout x:Name="FlyoutDeckExport" Header="Export" Position="Right" Panel.ZIndex="1" Width="450">
                <deckExport:DeckExportView x:Name="DeckExportFlyout"/>
            </controls:Flyout>
            <controls:Flyout x:Name="FlyoutDeckHistory" Header="{lex:Loc MainWindow_Flyout_VersionHistory_Header}" Position="Right" Panel.ZIndex="1" Width="245">
                <deckHistory:DeckHistoryView x:Name="DeckHistoryFlyout"/>
            </controls:Flyout>
            <controls:Flyout x:Name="FlyoutStats" Position="Left" Panel.ZIndex="1" Width="{Binding Width, RelativeSource={RelativeSource AncestorType=windows:MainWindow}}">
                <controls:Flyout.HeaderTemplate>
                    <DataTemplate>
                        <DockPanel Margin="10,13,10,8">
                            <Button Click="ButtonCloseStatsFlyout_OnClick" DockPanel.Dock="Right" Width="40" Height="40" VerticalAlignment="Center" Style="{DynamicResource MetroCircleButtonStyle}">
                                <Rectangle Width="20" Height="15">
                                    <Rectangle.Fill>
                                        <VisualBrush Visual="{StaticResource appbar_arrow_left_white}" />
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Button>
                            <Button Click="ButtonSwitchStatsToNewWindow_OnClick" BorderBrush="Transparent" Background="Transparent" VerticalAlignment="Center" Opacity="0.8" DockPanel.Dock="Left">
                                <StackPanel Orientation="Horizontal">
                                    <Rectangle Width="16" Height="16" Margin="0,0,10,0">
                                        <Rectangle.Fill>
                                            <VisualBrush Visual="{StaticResource appbar_arrow_right_left_white}" />
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <TextBlock Text="{lex:Loc MainWindow_Flyout_Stats_Move}" FontWeight="Normal" />
                                </StackPanel>
                            </Button>
                            <TextBlock Text="{lex:Loc MainWindow_Flyout_Stats_Header}" Foreground="White" Margin="15,0" FontSize="{StaticResource FlyoutHeaderFontSize}" VerticalAlignment="Center" HorizontalAlignment="Right" />
                        </DockPanel>
                    </DataTemplate>
                </controls:Flyout.HeaderTemplate>
                <ContentControl Name="StatsFlyoutContentControl"/>
            </controls:Flyout>
        </controls:FlyoutsControl>
    </controls:MetroWindow.Flyouts>
    <DockPanel>
        <StatusBar Name="StatusBarDev" DockPanel.Dock="Bottom" Visibility="Collapsed">
            <StatusBarItem Margin="2,0,0,0">
                <TextBlock FontSize="14">
                    <Run FontWeight="SemiBold" Text="Development build (unstable) - join"/>
                    <Hyperlink Foreground="White" FontWeight="Bold" Click="HyperlinkDevDiscord_OnClick">
                        <Run Text="#hdt on the dev discord"/>
                    </Hyperlink>
                    <Run FontWeight="SemiBold" Text="for feedback/issues"/>
                </TextBlock>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right">
                <CheckBox Foreground="White" Content="check for dev updates" FlowDirection="RightToLeft" 
                    IsChecked="{Binding CheckForDevUpdates, Source={StaticResource ConfigWrapper}}" />
            </StatusBarItem>
        </StatusBar>
        <StatusBar Name="StatusBarUpdate" DockPanel.Dock="Top" Margin="0,1,0,0" Visibility="{Binding Visibility, Source={x:Static utility:Updater.StatusBar}}">
            <StatusBarItem Margin="10,0,0,0" HorizontalAlignment="Center">
                <StackPanel Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" FontSize="14">
                        <Run FontWeight="SemiBold" Text="{lex:LocTextUpper MainWindow_StatusBarUpdate_NewUpdateAvailable}"/>
                        <Run FontWeight="SemiBold">-</Run>
                        <Hyperlink Foreground="White" FontWeight="Bold" Click="HyperlinkUpdateNow_OnClick">
                            <Run Text="{lex:LocTextUpper MainWindow_StatusBarUpdate_ClickToUpdate}"/>
                        </Hyperlink>
                    </TextBlock>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Name="TopRow" Height="0" />
                <RowDefinition Height="30"/>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <mainWindowControls:MainWindowMenuView x:Name="MainWindowMenu" Grid.Row="1" Grid.ColumnSpan="3"/>
                    <MenuItem Header="FROM DECK STRING" Click="BtnImportDeckString_Click" />
            <Separator Grid.Row="1" Grid.ColumnSpan="4" Margin="0,29,0,0" Panel.ZIndex="2" />
            <Grid Grid.Column="1" Grid.Row="2" Margin="-1,0,0,0" Width="255">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Button Name="BtnStartHearthstone" Click="BtnStartHearthstone_Click" Margin="10,6,10,-4" Grid.Row="0" Visibility="Visible" Style="{StaticResource AccentedSquareButtonStyle}">
                    <TextBlock Name="TextBlockBtnStartHearthstone" Text="{lex:LocTextUpper MainWindow_Button_StartHearthstone}" />
                </Button>
                <Button Name="BtnHsReplayDeckDetail" Margin="10,6,10,-4" Height="40"  Grid.Row="1" Style="{StaticResource SquareButtonStyle}"
                    Visibility="{Binding HsReplayButtonVisibility, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type windows:MainWindow}}}"
                    Click="BtnHsReplayDeckDetail_OnClick">
                    <DockPanel HorizontalAlignment="Center">
                        <Image Source="{DynamicResource HsReplayIcon}"
                            Height="24" RenderOptions.BitmapScalingMode="Fant"
                            DockPanel.Dock="Left" Margin="0,0,8,0"/>
                        <TextBlock VerticalAlignment="Center" FontWeight="SemiBold" Text="{lex:LocTextUpper MainWindow_DeckList_Button_HSReplay}" />
                    </DockPanel>
                </Button>
                <Border Name="PanelVersionComboBox" BorderThickness="1" BorderBrush="{DynamicResource TextBrush}" Margin="10,6,10,-4" Grid.Row="2" Visibility="Collapsed">
                    <DockPanel>
                        <TextBlock Text="{lex:LocTextUpper MainWindow_Label_SelectedVersion}" FontWeight="SemiBold" FontSize="14" VerticalAlignment="Center" Margin="5,0,0,0"/>
                        <ComboBox Name="ComboBoxDeckVersion" SelectionChanged="ComboBoxDeckVersion_OnSelectionChanged" Margin="5,0,0,0">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding ShortVersionString}" FontWeight="SemiBold"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </DockPanel>
                </Border>
                <Border Name="PanelCardCount" Height="28" BorderThickness="1" BorderBrush="{DynamicResource TextBrush}" Margin="10,6,10,-4" Grid.Row="2"  Visibility="Collapsed">
                    <DockPanel>
                        <controls1:DeckSetIcons x:Name="SetIcons" DockPanel.Dock="Right" Margin="0,0,2,0" Fill="{DynamicResource TextBrush}"/>
                        <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" >
                            <TextBlock Text="{lex:LocTextUpper MainWindow_DeckBuilder_Label_Cards}" VerticalAlignment="Center" FontWeight="SemiBold" FontSize="14" Margin="5,0,0,0"/>
                            <TextBlock Name="TextBlockCardCount" VerticalAlignment="Center" Text="0 / 30" FontWeight="SemiBold" FontSize="14" Margin="5,0,0,0"/>
                            <Rectangle Name="CardCountWarning" DockPanel.Dock="Left"  Width="16" Height="16" Visibility="Collapsed" Margin="3,0,0,0">
                                <Rectangle.Fill>
                                    <VisualBrush Visual="{StaticResource appbar_warning}" />
                                </Rectangle.Fill>
                            </Rectangle>
                        </StackPanel>
                    </DockPanel>
                </Border>
                <ListView x:Name="ListViewDeck" Grid.Row="3" Background="#696969"
                                    Foreground="White" FontWeight="Bold" BorderThickness="1"
                                    ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                    ScrollViewer.VerticalScrollBarVisibility="Visible"
                                    ScrollViewer.CanContentScroll="True" FontFamily="Arial" Margin="0,6,0,0"
                                    HorizontalAlignment="Center" Width="236" Height="auto"
                                    MouseLeftButtonUp="ListViewDeck_MouseLeftButtonUp"
                                    MouseRightButtonUp="ListViewDeck_MouseRightButtonUp">
                    <ListView.Resources>
                        <Style TargetType="GridViewColumnHeader">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </Style>
                        <Style TargetType="ListViewItem">
                            <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
                            <Setter Property="ToolTipService.ShowDuration" Value="60000" />
                            <Setter Property="ToolTipService.IsEnabled"
                                    Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type windows:MainWindow}}, Path=ShowToolTip}" />
                            <Setter Property="ToolTip">
                                <Setter.Value>
                                    <ToolTip Background="Transparent" BorderBrush="Transparent">
                                        <local:CardToolTip />
                                    </ToolTip>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Margin" Value="-4,-3,-3,0"/>
                            <Style.Triggers>
                                <Trigger Property="IsSelected"
                                         Value="True">
                                    <Setter Property="BorderBrush"
                                            Value="Blue" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListView.Resources>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <controls1:Card/>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <local:ManaCurve x:Name="ManaCurveMyDecks" Grid.Row="4" Height="150" Margin="0,6,0,6" />
            </Grid>
            <deckPicker:DeckPicker x:Name="DeckPickerList" HorizontalAlignment="Stretch" Margin="6,6,0,6" Grid.Column="0"
                              Grid.Row="2" Height="auto" Width="auto"
                              OnSelectedDeckChanged="DeckPickerList_OnSelectedDeckChanged"
                              OnDoubleClick="DeckPickerList_OnOnDoubleClick"/>
            <Rectangle Name="DeckPickerListCover" HorizontalAlignment="Stretch" Margin="6,6,0,6" Grid.Column="0"
                       Grid.Row="2" Panel.ZIndex="1"
                       Height="auto" Width="auto" Fill="#7F000000" Visibility="Hidden" />
            <Label Content="{Binding IntroductionLabelText, RelativeSource={RelativeSource AncestorType=controls:MetroWindow}}" Foreground="DarkGray" 
                   FontWeight="SemiBold" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="0" Grid.Row="2" 
                   Visibility="{Binding IntroductionLabelVisibility, RelativeSource={RelativeSource AncestorType=controls:MetroWindow}}" />
            <Menu Name="MenuNewDeck" Grid.Column="2" Grid.Row="1" Visibility="Collapsed">
                <MenuItem Header="{lex:LocTextUpper MainWindow_DeckBuilder_Button_Save}" Name="MenuItemSave" SubmenuOpened="MenuItem_OnSubmenuOpened">
                    <MenuItem.Icon>
                        <Rectangle Width="16" Height="16">
                            <Rectangle.Fill>
                                <VisualBrush Visual="{StaticResource appbar_save}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </MenuItem.Icon>
                    <MenuItem Name="MenuItemSaveVersionCurrent" Click="MenuItemSaveVersionCurrent_OnClick" Header="{lex:LocText InitializeValue=MainWindow_DeckBuilder_Button_Save_Current, Prefix='v1.0 '}">
                    </MenuItem>
                    <MenuItem Name="MenuItemSaveVersionMinor" Header="v1.1" Click="MenuItemSaveVersionMinor_OnClick"/>
                    <MenuItem Name="MenuItemSaveVersionMajor" Header="v2.0" Click="MenuItemSaveVersionMajor_OnClick"/>
                    <MenuItem Name="MenuItemSaveAsNew" Header="{lex:LocTextUpper InitializeValue=MainWindow_DeckBuilder_Button_Save_New, Suffix=' (v1.0)'}" Click="MenuItemSaveAsNew_OnClick"/>
                </MenuItem>
                <MenuItem Header="{lex:LocTextUpper MainWindow_DeckBuilder_Button_Cancel}" Click="BtnCancelEdit_Click">
                    <MenuItem.Icon>
                        <Rectangle Width="16" Height="16">
                            <Rectangle.Fill>
                                <VisualBrush Visual="{StaticResource appbar_cancel}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem>
                    <MenuItem.Header>
                        <TextBlock VerticalAlignment="Center" Margin="-10,0,0,0" Text="{lex:LocTextUpper MainWindow_DeckBuilder_Button_Filter}" />
                    </MenuItem.Header>
                    <MenuItem.Icon>
                        <Rectangle Width="16" Height="16">
                            <Rectangle.Fill>
                                <VisualBrush Visual="{StaticResource appbar_filter}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </MenuItem.Icon>
                    <MenuItem Name="MenuFilterMana" Header="{lex:LocTextUpper MainWindow_DeckBuilder_Filter_Cost}">
                        <RadioButton Content="{lex:LocTextUpper MainWindow_DeckBuilder_Filter_Cost_All}" IsChecked="True" Click="BtnFilter_OnClick" Margin="-24,0,0,0"
                                     FontSize="14" />
                        <RadioButton Content="0" Click="BtnFilter_OnClick" Margin="-24,0,0,0" FontSize="14" />
                        <RadioButton Content="1" Click="BtnFilter_OnClick" Margin="-24,0,0,0" FontSize="14" />
                        <RadioButton Content="2" Click="BtnFilter_OnClick" Margin="-24,0,0,0" FontSize="14" />
                        <RadioButton Content="3" Click="BtnFilter_OnClick" Margin="-24,0,0,0" FontSize="14" />
                        <RadioButton Content="4" Click="BtnFilter_OnClick" Margin="-24,0,0,0" FontSize="14" />
                        <RadioButton Content="5" Click="BtnFilter_OnClick" Margin="-24,0,0,0" FontSize="14" />
                        <RadioButton Content="6" Click="BtnFilter_OnClick" Margin="-24,0,0,0" FontSize="14" />
                        <RadioButton Content="7" Click="BtnFilter_OnClick" Margin="-24,0,0,0" FontSize="14" />
                        <RadioButton Content="8" Click="BtnFilter_OnClick" Margin="-24,0,0,0" FontSize="14" />
                        <RadioButton Content="9+" Click="BtnFilter_OnClick" Margin="-24,0,0,0" FontSize="14" />
                    </MenuItem>
                    <MenuItem Name="MenuFilterType" Header="{lex:LocTextUpper MainWindow_DeckBuilder_Filter_Type}">
                        <RadioButton Name="RadioButtonTypeAll"  Content="{lex:LocTextUpper MainWindow_DeckBuilder_Filter_Type_All}" IsChecked="True" Click="BtnFilter_OnClick" Margin="-24,0,0,0" FontSize="14" />
                        <RadioButton Name="RadioButtonTypeClass" Content="{lex:LocTextUpper MainWindow_DeckBuilder_Filter_Type_Class}" Click="BtnFilter_OnClick" Margin="-24,0,0,0" FontSize="14" />
                        <RadioButton Name="RadioButtonTypeNeutral" Content="{lex:LocTextUpper MainWindow_DeckBuilder_Filter_Type_Neutral}" Click="BtnFilter_OnClick" Margin="-24,0,0,0" FontSize="14" />
                    </MenuItem>
                    <MenuItem Name="MenuFilterSet" Header="{lex:LocTextUpper MainWindow_DeckBuilder_Filter_Set}">
                        <RadioButton Name="RadioButtonSet0" Content="{lex:LocTextUpper MainWindow_DeckBuilder_Filter_Set_All}" IsChecked="True" Click="BtnFilter_OnClick" Margin="-24,0,0,0" FontSize="14" />
                        <RadioButton Name="RadioButtonSet2" Content="{lex:LocTextUpper MainWindow_DeckBuilder_Filter_Set_Basic}" Click="BtnFilter_OnClick" Margin="-24,0,0,0" FontSize="14" />
                        <RadioButton Name="RadioButtonSet3" Content="{lex:LocTextUpper MainWindow_DeckBuilder_Filter_Set_Classic}" Click="BtnFilter_OnClick" Margin="-24,0,0,0" FontSize="14" />
                        <RadioButton Name="RadioButtonSet4" Content="{lex:LocTextUpper MainWindow_DeckBuilder_Filter_Set_HallOfFame}" Click="BtnFilter_OnClick" Margin="-24,0,0,0" FontSize="14" />
                        <RadioButton Name="RadioButtonSet12" Content="{lex:LocTextUpper MainWindow_DeckBuilder_Filter_Set_Naxx}" Click="BtnFilter_OnClick" Margin="-24,0,0,0" FontSize="14" />
                        <RadioButton Name="RadioButtonSet13" Content="{lex:LocTextUpper MainWindow_DeckBuilder_Filter_Set_Gvg}" Click="BtnFilter_OnClick" Margin="-24,0,0,0" FontSize="14" />
                        <RadioButton Name="RadioButtonSet14" Content="{lex:LocTextUpper MainWindow_DeckBuilder_Filter_Set_Brm}" Click="BtnFilter_OnClick" Margin="-24,0,0,0" FontSize="14" />
                        <RadioButton Name="RadioButtonSet15" Content="{lex:LocTextUpper MainWindow_DeckBuilder_Filter_Set_Tgt}" Click="BtnFilter_OnClick" Margin="-24,0,0,0" FontSize="14" />
                        <RadioButton Name="RadioButtonSet20" Content="{lex:LocTextUpper MainWindow_DeckBuilder_Filter_Set_Loe}" Click="BtnFilter_OnClick" Margin="-24,0,0,0" FontSize="14" />
                        <RadioButton Name="RadioButtonSet21" Content="{lex:LocTextUpper MainWindow_DeckBuilder_Filter_Set_Wotog}" Click="BtnFilter_OnClick" Margin="-24,0,0,0" FontSize="14" />
                        <RadioButton Name="RadioButtonSet23" Content="{lex:LocTextUpper MainWindow_DeckBuilder_Filter_Set_Kara}" Click="BtnFilter_OnClick" Margin="-24,0,0,0" FontSize="14" />
                        <RadioButton Name="RadioButtonSet25" Content="{lex:LocTextUpper MainWindow_DeckBuilder_Filter_Set_Msg}" Click="BtnFilter_OnClick" Margin="-24,0,0,0" FontSize="14" />
                        <RadioButton Name="RadioButtonSet27" Content="{lex:LocTextUpper MainWindow_DeckBuilder_Filter_Set_Ungoro}" Click="BtnFilter_OnClick" Margin="-24,0,0,0" FontSize="14" />
                    </MenuItem>
                </MenuItem>
            </Menu>
            <Grid Grid.Column="2" Grid.Row="2" Name="GridNewDeck" Visibility="Collapsed" Width="492">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,6,0,0" Grid.Row="0"
                            Width="236" Grid.ColumnSpan="2">
                    <Border Width="107"
            BorderThickness="1" DockPanel.Dock="Top" BorderBrush="{DynamicResource TextBrush}">
                        <TextBox controls:TextBoxHelper.Watermark="{lex:LocText MainWindow_DeckBuilder_TextBox_Name_Watermark}" TextWrapping="NoWrap"
                             TextChanged="TextBoxDeckName_TextChanged" Name="TextBoxDeckName" 
                     controls:TextBoxHelper.IsWaitingForData="True"/>
                    </Border>

                    <Rectangle Name="DeckNameExistsWarning" Width="16" Height="16" ToolTip="{lex:LocText MainWindow_DeckBuilder_Warning_ToolTip_NameAlreadyExists}" Visibility="Collapsed" Margin="3,0,0,0">
                        <Rectangle.Fill>
                            <VisualBrush Visual="{StaticResource appbar_warning}" />
                        </Rectangle.Fill>
                    </Rectangle>
                    <Border Width="125"
            BorderThickness="1" DockPanel.Dock="Top" Margin="3,0,0,0" BorderBrush="{DynamicResource TextBrush}">
                        <TextBox  controls:TextBoxHelper.Watermark="Search..." x:Name="TextBoxDBFilter"
                             TextChanged="TextBoxDBFilter_TextChanged" TextWrapping="NoWrap" 
                             PreviewKeyDown="TextBoxDBFilter_PreviewKeyDown"
                     controls:TextBoxHelper.IsWaitingForData="True" />
                    </Border>
                </StackPanel>
                <DockPanel Grid.Row="1" Grid.Column="0" Margin="0,2,0,6">
                    <Border Name="BorderConstructedCardLimits" BorderThickness="1" BorderBrush="{DynamicResource TextBrush}" DockPanel.Dock="Bottom" Margin="0,2,0,0" HorizontalAlignment="Left" Width="236">
                        <StackPanel>
                            <CheckBox Name="CheckBoxIncludeWild" Content="{lex:Loc MainWindow_DeckBuilder_CheckBox_IncludeWild}" IsChecked="{Binding CardDbIncludeWildOnlyCards, Source={StaticResource ConfigWrapper}}" Margin="2" Checked="CheckBoxIncludeWild_Changed" Unchecked="CheckBoxIncludeWild_Changed"/>
                            <CheckBox Name="CheckBoxConstructedCardLimits" Content="{lex:Loc MainWindow_DeckBuilder_CheckBox_CardLimit}" IsChecked="True" Margin="2"/>
                        </StackPanel>
                    </Border>
                    <ListView x:Name="ListViewDB" Foreground="White" Background="#696969"
                                    FontWeight="Bold" BorderThickness="1"
                                    ScrollViewer.VerticalScrollBarVisibility="Visible"
                                    ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                    ScrollViewer.CanContentScroll="True" FontFamily="Arial"
                                    HorizontalAlignment="Left"
                                    Width="236" KeyDown="ListViewDB_KeyDown"
                                    MouseLeftButtonUp="ListViewDB_MouseLeftButtonUp">
                        <ListView.Resources>
                            <Style TargetType="GridViewColumnHeader">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </Style>
                            <Style TargetType="ListViewItem">
                                <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
                                <Setter Property="ToolTipService.ShowDuration" Value="60000" />
                                <Setter Property="ToolTipService.IsEnabled"
                                    Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type windows:MainWindow}}, Path=ShowToolTip}" />
                                <Setter Property="ToolTip">
                                    <Setter.Value>
                                        <ToolTip Background="Transparent" BorderBrush="Transparent">
                                            <local:CardToolTip />
                                        </ToolTip>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Margin" Value="-4,-3,-3,0"/>
                                <Style.Triggers>
                                    <Trigger Property="IsSelected"
                                         Value="True">
                                        <Setter Property="BorderBrush"
                                            Value="Blue" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.Resources>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <controls1:Card/>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </DockPanel>
            </Grid>
            <mainWindowControls:NewsBarView x:Name="NewsBar" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="4" Height="26" Margin="0,1,0,0" Visibility="Collapsed" />
        </Grid>
    </DockPanel>
</controls:MetroWindow>
